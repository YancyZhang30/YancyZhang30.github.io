import{_ as s,v as a,b as n,R as e}from"./chunks/framework.caa0fbaf.js";const m=JSON.parse('{"title":"vue3组合式api","description":"","frontmatter":{},"headers":[],"relativePath":"1-前端开发/1-随笔/16-vue3组合式api.md","filePath":"1-前端开发/1-随笔/16-vue3组合式api.md","lastUpdated":1705758345000}'),p={name:"1-前端开发/1-随笔/16-vue3组合式api.md"},l=e(`<h1 id="vue3组合式api" tabindex="-1">vue3组合式api <a class="header-anchor" href="#vue3组合式api" aria-label="Permalink to &quot;vue3组合式api&quot;">​</a></h1><h2 id="组合式函数composables" tabindex="-1">组合式函数Composables <a class="header-anchor" href="#组合式函数composables" aria-label="Permalink to &quot;组合式函数Composables&quot;">​</a></h2><p>打开你的vscode, 随便粘贴复制出一段代码，你会看见是这种吧。</p><p><img src="https://pic1.zhimg.com/80/v2-b65fd21fecaacaebab76fa4f08cb8f78_1440w.webp" alt="组合式api"></p><p>在复杂的业务逻辑的压力下，很容易就会写出这种流水账代码，更糟糕的是可能会有类似于使用一个reactive包裹页面中所有数据，然后在按顺序写methods、computed、watch、生命周期函数的代码，那这和vue2有什么区别呢？</p><p>然而，理想的vue3组合式代码，应该是： <img src="https://pic4.zhimg.com/80/v2-9ea3c41929cd69c43f98da90176dcba3_1440w.webp" alt="理想组合式api"></p><p>vue3官网也提出了<strong>通过抽取组合式函数改善代码结构</strong></p><blockquote><p>在 Vue 应用的概念中，“组合式函数”(Composables) 是一个利用 Vue 的组合式 API 来封装和复用有状态逻辑的函数。</p></blockquote><blockquote><p>抽取组合式函数不仅是为了复用，也是为了代码组织。随着组件复杂度的增高，你可能会最终发现组件多得难以查询和理解。组合式 API 会给予你足够的灵活性，让你可以基于逻辑问题将组件代码拆分成更小的函数：</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> useFeatureA </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> from &#39;./featureA.js&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> useFeatureB </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> from &#39;./featureB.js&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> useFeatureC </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> from &#39;./featureC.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">const </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> foo</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> bar </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> = useFeatureA()</span></span>
<span class="line"><span style="color:#A6ACCD;">const </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> baz </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> = useFeatureB(foo)</span></span>
<span class="line"><span style="color:#A6ACCD;">const </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> qux </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> = useFeatureC(baz)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="实际业务应用" tabindex="-1">实际业务应用 <a class="header-anchor" href="#实际业务应用" aria-label="Permalink to &quot;实际业务应用&quot;">​</a></h2><p>//TODO</p>`,12),o=[l];function t(r,c,i,u,D,b){return a(),n("div",null,o)}const A=s(p,[["render",t]]);export{m as __pageData,A as default};
